# Work In Progress transition to v2
# taken from https://sysadmins.co.za/traefik-and-portainer-on-docker-swarm-with-letsencrypt/
# create a portainer app template and add this variables (or declare on command line with the -e option):
# EMAIL [email address to be notified by let's encrypt]
# DOMAIN [domain name used as a base to generate fqdn certificates]
# STACK_BASE_PATH [base folder where to host files, must exists]
# put autogenerated certificate in /certs/default.[key|crt] to use this instead of traefik default (which expose its identity)
version: '3.7'
services:
  traefik:
    image: traefik:v2.2
    hostname: traefik
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    command: >
      --api
      --acme
      --acme.entryPoint=https
      --acme.httpChallenge.entryPoint=http
      --acme.onHostRule=true
      --acme.onDemand=false
      --acme.acmelogging=true
      --acme.email=${EMAIL:-root@localhost}
      --constraints=tag==traefik-public
      --docker
      --docker.swarmMode
      --docker.domain=${DOMAIN:-localhost}
      --docker.watch
      --docker.exposedbydefault=false
      --defaultentrypoints=http,https
      --entryPoints.web.address=:80
      --entryPoints.websecure.address=:443
      --certificatesResolvers.default.acme.storage=/certs/acme-v2.json
      --certificatesResolvers.default.acme.httpChallenge.entryPoint=web

      --entrypoints='Name:https Address::443 TLS TLS.DefaultCertificate.Cert:/certs/default.crt TLS.DefaultCertificate.Key:/certs/default.key'
      --logLevel=INFO
      --accessLog
      --accessLog.filePath="/logs/access.log"
      --accessLog.bufferingSize=100
      command: --api.insecure=true --providers.docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik_certs:/certs
      - traefik_auth:/auth
      - traefik_logs:/logs
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.docker.network=traefik-public"
        - "traefik.port=8080"
        - "traefik.tags=traefik-public"
        - "traefik.redirectorservice.frontend.entryPoints=http"
        - "traefik.redirectorservice.frontend.redirect.entryPoint=https"
        - "traefik.webservice.frontend.entryPoints=https"
        - "traefik.backend=traefik"
        - "traefik.enable=true"
        - "traefik.frontend.rule=Host:traefik.${DOMAIN:-localhost}"
        - "traefik.frontend.auth.basic.usersFile=/auth/htpasswd"
        - "traefik.frontend.headers.SSLRedirect=true"
        - "traefik.frontend.entryPoints=http,https"

  nginx-catchall:
    image: nginx:1.17
    hostname: catch-all
    volumes:
      - ${STACK_BASE_PATH}/nginx/conf:/etc/nginx/conf.d:ro
      - ${STACK_BASE_PATH}/nginx/html:/data/html:ro
      - traefik_logs:/data/logs
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.port=80"
        - "traefik.tags=traefik-public"
        - "traefik.frontend.entryPoints=http,https"
        - "traefik.frontend.priority=1"
        - "traefik.frontend.rule=HostRegexp:{catchall:.*}"

networks:
  traefik-public:
    driver: overlay
    name: traefik-public
    
volumes:
  traefik_certs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/certs

  traefik_auth:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/auth

  traefik_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/logs

# end 
