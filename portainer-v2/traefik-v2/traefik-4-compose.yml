# create a portainer app template and add this variables (or declare on command line with the -e option):
# EMAIL [email address to be notified by let's encrypt]
# FQDN_HOST [FQDN (full hostname) used to access traefik dashboard and to create letsencrypt certificates]
# STACK_BASE_PATH [base folder where to host files, must exists]
# put autogenerated certificate in /certs/default.[key|crt] to use this instead of traefik default (which expose its identity)
version: '3.7'
services:
  traefik:
    image: traefik:v2.9
    hostname: traefik
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 8080
        mode: host
    environment:
      - TZ=Europe/Rome
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certs:/certs
      - traefik_auth:/auth
      - traefik_logs:/logs
      - traefik_conf_dynamic:/conf
      - traefik_conf_static:/etc/traefik
    networks:
      - public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: always
      labels:
        - "traefik.enable=true"

        # Dashboard
        - "traefik.http.routers.traefik_dash.rule=Host(`${FQDN_HOST}`)"
        - "traefik.http.routers.traefik_dash.entrypoints=https, http"
        - "traefik.http.routers.traefik_dash.service=api@internal"
        - "traefik.http.routers.traefik_dash.middlewares=nm-auth@file, nm-ipwhitelist@file, redirect2https@file"

        # Global redirect HTTP to HTTPS
        #- "traefik.http.routers.catchall.rule=HostRegexp(`{any:.+}`)"
        #- "traefik.http.routers.catchall.entrypoints=http"
        #- "traefik.http.routers.catchall.service=api@internal"
        #- "traefik.http.routers.catchall.middlewares=redirect2https@file"

        # necessario altrimenti va in errore, anche se inutile, boh
        - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"

networks:
  public:
 
volumes:
  traefik_certs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/certs

  traefik_auth:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/auth

  traefik_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/logs

  traefik_conf_static:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/conf/static

  traefik_conf_dynamic:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/conf

