{
  "version": "2",
	"templates": [
		{
			"type": 2,
			"name": "ipblock-log",
			"title": "IP Block Log by Neomediatech",
			"description": "Log degli IP bloccati, inseriti in un db MariaDB",
			"note": "<h1>IMPORTANT:</h1>You must create the path where you host configurations, eg: <strong>mkdir -p /srv/data/docker/containers/ipblock-log</strong> <br/>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/ipblock-log.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/ipblock-log.yml"
			},
			"env": [{
				 "name": "DOMAIN",
				 "label": "DOMAIN",
				 "description": "Base domain used to create FQDN addresses for let's encrypt",
			         "default": "c.glob***.i*"
				},
				{
				 "name": "TRAEFIK_WHITELIST",
				 "label": "TRAEFIK_WHITELIST",
				 "description": "elenco di classi/ip autorizzate ad attraversare traefik, separati da virgola",
			         "default": "127.0.0.1, ..."
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/ipblock-log"
				}
			]
		},
		{
			"type": 2,
			"name": "rbldns",
			"title": "RBLdns by Neomediatech",
			"description": "lista rbl basata su file",
			"note": "<h1>IMPORTANT:</h1>You must create the path where you host configurations, eg: <strong>mkdir -p /srv/data/docker/containers/rbldns</strong> <br/>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/nm-logo.png",
			"repository": {
				"url": "https://github.com/Neomediatech/rbldns",
				"stackfile": "docker-compose.yml"
			},
			"env": [{
				 "name": "RBL_DOMAIN",
				 "label": "RBL_DOMAIN",
				 "description": "Domain used to host the DNSBL lists",
			         "default": "rep.cdcd.it"
				},
				{
				 "name": "LOGGING",
				 "label": "LOGGING",
				 "description": "Enable DNS query logging? 1 -> Yes , 0 -> No",
			         "default": "1"
				},
				{
				 "name": "CUSTOM_ZONES",
				 "label": "CUSTOM_ZONES",
				 "description": "List of custom zones separated by comma (ex: mylist,otherlist.txt,third.list)"
				},
				{
				 "name": "CUSTOM_CONFIG",
				 "label": "CUSTOM_CONFIG",
				 "description": "Add custom config (ex: mybl.domain.tld:ip4set:blfile.txt)",
			         "default": "cbl.cdcd.it:ip4set:cbl.rbl auth.cdcd.it:ip4set:auth.rbl asn.cdcd.it:dnset:asn_neo-rbl asn.cdcd.it:dnset:asndrop.strange-rbl"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/rbldns"
				},
				{
				 "name": "PORT",
				 "label": "PORT",
				 "description": "Port to listen to",
			         "default": "5353"
				}
			]
		},
		{
			"type": 2,
			"name": "DCC",
			"title": "DCC",
			"description": "DCC",
			"note": "https://www.rhyolite.com/dcc/",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/nm-logo.png",
			"repository": {
				"url": "https://github.com/Neomediatech/dcc-docker",
				"stackfile": "docker-compose.yml"
			}
		},
		{
			"type": 2,
			"name": "echoip",
			"title": "echoip",
			"description": "Simple app to get your ip via curl (like icanhazip.com)",
			"note": "nothing to note ;-)",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/portainer-v2/echoip.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/echoip.yml"
			},
			"env": [{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/echoip"
				},
				{
				 "name": "FQDN_HOST",
				 "label": "FQDN_HOST",
				 "description": "FQDN where to host this service",
			         "default": "ip.cd..."
				},
				{
				 "name": "GEOIP_LICENSE_KEY",
				 "label": "GEOIP_LICENSE_KEY",
				 "description": "link to how to get license key",
			         "default": "...."
				}
			]
		},
		{
			"type": 2,
			"name": "catchall",
			"title": "Nginx container to catch all 'unused' web traffic",
			"description": "_",
			"note": "<h1>IMPORTANT:</h1>You must create the path where you host configurations, eg: <strong>mkdir -p /srv/data/docker/containers/traefik</strong> <br/>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/portainer-v2/nginx-catchall-traefik.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/nginx-catchall.yml"
			},
			"env": [{
				 "name": "FQDN_HOST",
				 "label": "FQDN_HOST",
				 "description": "Full hostname",
			         "default": "catchall.c.***"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/traefik"
				}
			]
		},
		{
			"type": 2,
			"name": "pma-ispc",
			"title": "phpMyAdmin per db ISPConfig",
			"description": "Container pma per db ispconfig",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/portainer-v2/pma-ispc.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/pma-4-swarm-traefik.yml"
			},
			"env": [{
				 "name": "DB_HOST",
				 "label": "DB_HOST",
				 "description": "Mysql/MariaDB server",
			         "default": "10.2.0.1"
				},
				{
				 "name": "FQDN_HOST",
				 "label": "FQDN_HOST",
				 "description": "hostname da utilizzare per raggiungere il servizio",
			         "default": "pma-ispc.c..."
				},
				{
				 "name": "UPLOAD_LIMIT",
				 "label": "UPLOAD_LIMIT",
				 "description": "limite di upload del file sql",
			         "default": "20M"
				}
			]
		},
		{
			"type": 2,
			"name": "pyzor",
			"title": "Pyzor server by neomediatech",
			"description": "Stack composto da un'istanza Pyzor e Redis",
			"note": "<h1>IMPORTANT:</h1>You must create the path where you host configurations, eg: <strong>mkdir -p /srv/data/docker/containers/pyzor-server</strong> <br/>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/nm-logo.png",
			"repository": {
				"url": "https://github.com/Neomediatech/pyzor-server",
				"stackfile": "docker-compose.yml"
			},
			"env": [{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/pyzor-server"
				}
			]
		},
		{
			"type": 2,
			"name": "failover",
			"title": "Failover Stack",
			"description": "API (& more maybe) to manage failover to servers Database utilizzato dai vari server per recuperare i cron (e magari altro in futuro)",
			"note": "<h1>IMPORTANTE:</h1> Devi prima creare il percorso dove verranno ospitati i file, es: <strong>mkdir -p /srv/data/docker/containers/failover</strong> <br/>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/portainer-v2/failover.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/failover-stack-4-swarm.yml"
			},
			"env": [{
				 "name": "FQDN_PMA",
				 "label": "FQDN_PMA",
				 "description": "FQDN to access phpmyadmin interface (used by traefik to redirect traffic & for let'encrypt ssl certificate",
			         "default": "failover-pma.c.g.."
				},
				{
				 "name": "FQDN_NGINX",
				 "label": "FQDN_NGINX",
				 "description": "FQDN to access our api interface (used by traefik to redirect traffic & for let'encrypt ssl certificate",
			         "default": "failover-api.c.g.."
				},
				{
				 "name": "TRAEFIK_WHITELIST",
				 "label": "TRAEFIK_WHITELIST",
				 "description": "(optional) elenco di classi/ip autorizzate ad attraversare traefik, separati da virgola",
			         "default": "127.0.0.1"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/failover"
				}
			]
		},
		{
			"type": 2,
			"name": "sshd",
			"title": "SSHd by Neomediatech",
			"description": "SSHd container",
			"note": "<b>STACK_BASE_PATH=/srv/data/docker/containers/sshd ; mkdir -p ${STACK_BASE_PATH}/{conf,home,root,shadowdir,logs}</b>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/sshd/master/openssh_logo.png",
			"image": "neomediatech/sshd:latest",
			"hostname": "sshd",
			"repository": {
				"url": "https://github.com/Neomediatech/sshd",
				"stackfile": "docker-compose.yml"
			},
			"env": [{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/sshd"
				}
			]
		},
		{
			"type": 1,
			"name": "fail2ban",
			"title": "Fail2Ban by Neomediatech (on Ubuntu 20.04)",
			"description": "Dockerized Fail2Ban",
			"note": "<h2>ENV parameters below can be omitted if you put them in /data/config.ini</h2><h1>crea le varie directory: </h1>BASE_DIR='/srv/data/docker/containers/fail2ban' <br>mkdir -p $BASE_DIR/{action.d,db,filter.d,jail.d,log} && chmod 777 $BASE_DIR/{action.d,db,filter.d,jail.d,log}",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/fail2ban/master/fail2ban_logo.png",
			"image": "neomediatech/fail2ban:ubuntu-20.04-latest",
			"hostname": "fail2ban",
			"network": "host",
			"volumes": [
			  {
			    "container": "/data",
			    "bind": "/srv/data/docker/containers/fail2ban/confs"
			  },
			  {
			    "container": "/var/log",
			    "bind": "/srv/data/docker/containers/fail2ban/logs"
			  },
			  {
			    "container": "/var/log/dnsbl-ipset",
			    "bind": "/var/log/dnsbl-ipset",
			    "readonly": true
			  },
			  {
			    "container": "/var/log/nginx-catchall",
			    "bind": "/srv/data/docker/containers/traefik/logs",
			    "readonly": true
			  },
			  {
			    "container": "/var/log/sshd",
			    "bind": "/srv/data/docker/containers/sshd/logs",
			    "readonly": true
			  }
			],
			"restart_policy": "always",
			"privileged": true,
			"env": [{
				 "name": "F2B_DEST_EMAIL",
				 "label": "F2B_DEST_EMAIL",
				 "description": "_",
			         "default": "supp..@ne.."
				},
				{
				 "name": "F2B_SENDER",
				 "label": "F2B_SENDER",
				 "description": "_",
			         "default": "hostname@ne.."
				},
				{
				 "name": "SSMTP_HOST",
				 "label": "SSMTP_HOST",
				 "description": "SMTP to use to send notifications",
				 "default": "10.40.50.5"
				},
				{
				 "name": "SSMTP_HOSTNAME",
				 "label": "SSMTP_HOSTNAME",
				 "description": "_",
			         "default": "hostname.ne.."
				}
			]
		},
		{
			"type": 1,
			"name": "fail2ban",
			"title": "Fail2Ban by Neomediatech (on Ubuntu 22.04)",
			"description": "Dockerized Fail2Ban",
			"note": "<h2>ENV parameters below can be omitted if you put them in /data/config.ini</h2><h1>crea le varie directory: </h1>BASE_DIR='/srv/data/docker/containers/fail2ban' <br>mkdir -p $BASE_DIR/{action.d,db,filter.d,jail.d,log} && chmod 777 $BASE_DIR/{action.d,db,filter.d,jail.d,log}",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/fail2ban/master/fail2ban_logo.png",
			"image": "neomediatech/fail2ban:ubuntu-22.04",
			"hostname": "fail2ban",
			"network": "host",
			"volumes": [
			  {
			    "container": "/data",
			    "bind": "/srv/data/docker/containers/fail2ban/confs"
			  },
			  {
			    "container": "/var/log",
			    "bind": "/srv/data/docker/containers/fail2ban/logs"
			  },
			  {
			    "container": "/var/log/dnsbl-ipset",
			    "bind": "/var/log/dnsbl-ipset",
			    "readonly": true
			  },
			  {
			    "container": "/var/log/nginx-catchall",
			    "bind": "/srv/data/docker/containers/traefik/logs",
			    "readonly": true
			  },
			  {
			    "container": "/var/log/sshd",
			    "bind": "/srv/data/docker/containers/sshd/logs",
			    "readonly": true
			  }
			],
			"restart_policy": "always",
			"privileged": true,
			"env": [{
				 "name": "F2B_DEST_EMAIL",
				 "label": "F2B_DEST_EMAIL",
				 "description": "_",
			         "default": "supp..@ne.."
				},
				{
				 "name": "F2B_SENDER",
				 "label": "F2B_SENDER",
				 "description": "_",
			         "default": "hostname@ne.."
				},
				{
				 "name": "SSMTP_HOST",
				 "label": "SSMTP_HOST",
				 "description": "SMTP to use to send notifications",
				 "default": "10.40.50.5"
				},
				{
				 "name": "SSMTP_HOSTNAME",
				 "label": "SSMTP_HOSTNAME",
				 "description": "_",
			         "default": "hostname.ne.."
				}
			]
		},

		{
			"type": 1,
			"name": "redis-service",
			"title": "Redis",
			"description": "Redis di servizio senza scrittura dati su disco",
			"note": "_",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/portainer-v2/redis-logo.png",
			"image": "redis:alpine",
			"hostname": "redis-service",
			"network": "bridge",
			"ports": ["6400:6379/tcp"],
			"volumes": [
			  {
			    "container": "/data",
			    "bind": "/srv/data/docker/containers/redis-service/data"
			  }
			],
			"restart_policy": "always"
		},
		{
			"type": 1,
			"name": "sshd",
			"title": "SSHd by Neomediatech",
			"description": "SSHd container",
			"note": "_",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/sshd/master/openssh_logo.png",
			"image": "neomediatech/sshd:latest",
			"hostname": "sshd",
			"network": "bridge",
			"ports": ["22222:22/tcp"],
			"volumes": [
			  {
			    "container": "/etc/ssh",
			    "bind": "/srv/data/docker/containers/sshd/conf"
			  },
			  {
			    "container": "/home",
			    "bind": "/srv/data/docker/containers/sshd/home"
			  },
			  {
			    "container": "/root",
			    "bind": "/srv/data/docker/containers/sshd/root"
			  },
			  {
			    "container": "/data",
			    "bind": "/srv/data/docker/containers/sshd/shadowdir"
			  },
			  {
			    "container": "/var/log",
			    "bind": "/srv/data/docker/containers/sshd/logs"
			  }
			],
			"restart_policy": "always"
		},
		{
			"type": 1,
			"name": "logspout",
			"title": "Logspout from gliderlabs",
			"description": "Log router for Docker containers that runs inside Docker",
			"note": "!!WARNING!! WORK IN PROGRESS! USE AT YOU OWN RISK!",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/nm-logo.png",
			"image": "gliderlabs/logspout:latest",
			"command": "syslog://10.205.33.1:514",
			"hostname": "logspout",
			"network": "bridge",
			"ports": ["48181:80/tcp"],
			"volumes": [
			  {
			    "container": "/var/run/docker.sock",
			    "bind": "/var/run/docker.sock"
			  },
			  {
			    "container": "/etc/localtime",
			    "bind": "/etc/localtime",
			    "readonly": true
			  }
			],
			"restart_policy": "always"
		},
		{
			"type": 2,
			"name": "honeypot",
			"title": "HoneyPot All-In-One",
			"description": "Container standalone per collezionare tentativi di intrusione/spam",
			"note": "<h1>Attenzione!</h1>Assicurati di aver creato tutti i vari path",
			"categories": [
				"HoneyPot"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/honeypot.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/honey-allinone-stack-4-compose.yml"
			},
			"env": [{
                                 "name": "STACK_BASE_PATH",
                                 "label": "STACK_BASE_PATH",
                                 "description": "Path for the stack. Must exists before launching this stack!",
                                 "default": "/srv/data/docker/containers/honeypot"
                                },
                                {
				 "name": "OPENCANARY_NODE_ID",
				 "label": "Opencanary Node ID",
				 "description": " ",
			         "default": "honey-customise"
				},
				{
				 "name": "LOGS_PATH",
				 "label": "LOGS_PATH",
				 "description": "Path for logfiles. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/fail2ban/logs/honeypot"
				},
				{
				 "name": "MAILSERVER_CERT",
				 "label": "MAILSERVER_CERT",
				 "description": "FQDN server name for the SSL/TLS certificate, will not be automatically generated",
			         "default": "noservername.domain.tld"
				},
                                {
                                 "name": "CLAMAV_ENABLED",
                                 "label": "Enable ClamAV Antivirus?",
                                 "description": "Enable ClamAV Antivirus? [yes (Default), no]",
                                 "default": "yes"
                                },
                                {
                                 "name": "DNSBL_IPSET_START",
                                 "label": "DNSBL_IPSET_START",
                                 "description": "Start dnsbl-ipset.sh script? (Default yes, no to not start it)",
                                 "default": "yes"
                                },
                                {
                                 "name": "RSPAMD_START",
                                 "label": "RSPAMD_START",
                                 "description": "Start Rspamd? (Default yes, no to not start it)",
                                 "default": "yes"
                                },
                                {
                                 "name": "OPENCANARY_PROXY_PORT",
                                 "label": "OPENCANARY_PROXY_PORT",
                                 "description": "Host port used to redirect HTTP PROXY requests to OpenCanary",
                                 "default": "8080"
                                },
                                {
                                 "name": "OPENCANARY_HTTP_PORT",
                                 "label": "OPENCANARY_HTTP_PORT",
                                 "description": "Host port used to redirect HTTP requests to OpenCanary",
                                 "default": "80"
                                },
                                {
                                 "name": "OPENCANARY_HTTPS_PORT",
                                 "label": "OPENCANARY_HTTPS_PORT",
                                 "description": "Host port used to redirect HTTPS requests to OpenCanary",
                                 "default": "443"
                                }
			]
		},
		{
			"type": 3,
			"name": "honeypot",
			"title": "HoneyPot All-In-One",
			"description": "Compose stack per collezionare tentativi di intrusione/spam",
			"note": "<h1>Attenzione!</h1>Assicurati di aver creato tutti i vari path",
			"categories": [
				"HoneyPot"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/honeypot.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/honey-allinone-stack-4-compose.yml"
			},
			"env": [{
                                 "name": "STACK_BASE_PATH",
                                 "label": "STACK_BASE_PATH",
                                 "description": "Path for the stack. Must exists before launching this stack!",
                                 "default": "/srv/data/docker/containers/honeypot"
                                },
                                {
				 "name": "OPENCANARY_NODE_ID",
				 "label": "Opencanary Node ID",
				 "description": " ",
			         "default": "honey-customise"
				},
				{
				 "name": "LOGS_PATH",
				 "label": "LOGS_PATH",
				 "description": "Path for logfiles. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/fail2ban/logs/honeypot"
				},
				{
				 "name": "MAILSERVER_CERT",
				 "label": "MAILSERVER_CERT",
				 "description": "FQDN server name for the SSL/TLS certificate, will not be automatically generated",
			         "default": "noservername.domain.tld"
				},
                                {
                                 "name": "CLAMAV_ENABLED",
                                 "label": "Enable ClamAV Antivirus?",
                                 "description": "Enable ClamAV Antivirus? [yes (Default), no]",
                                 "default": "yes"
                                },
                                {
                                 "name": "DNSBL_IPSET_START",
                                 "label": "DNSBL_IPSET_START",
                                 "description": "Start dnsbl-ipset.sh script? (Default yes, no to not start it)",
                                 "default": "yes"
                                },
                                {
                                 "name": "RSPAMD_START",
                                 "label": "RSPAMD_START",
                                 "description": "Start Rspamd? (Default yes, no to not start it)",
                                 "default": "yes"
                                },
                                {
                                 "name": "OPENCANARY_PROXY_PORT",
                                 "label": "OPENCANARY_PROXY_PORT",
                                 "description": "Host port used to redirect HTTP PROXY requests to OpenCanary",
                                 "default": "8080"
                                },
                                {
                                 "name": "OPENCANARY_HTTP_PORT",
                                 "label": "OPENCANARY_HTTP_PORT",
                                 "description": "Host port used to redirect HTTP requests to OpenCanary",
                                 "default": "80"
                                },
                                {
                                 "name": "OPENCANARY_HTTPS_PORT",
                                 "label": "OPENCANARY_HTTPS_PORT",
                                 "description": "Host port used to redirect HTTPS requests to OpenCanary",
                                 "default": "443"
                                }
			]
		},
		{
			"type": 2,
			"name": "HoneyPot",
			"title": "HoneyPot",
			"description": "Stack di container per collezionare tentativi di intrusione/spam",
			"note": "<h1>Attenzione!</h1>Assicurati di aver creato tutti i vari path",
			"categories": [
				"HoneyPot"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/honeypot.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/honey-stack-4-compose-v3.yml"
			},
			"env": [{
                                 "name": "STACK_BASE_PATH",
                                 "label": "STACK_BASE_PATH",
                                 "description": "Path for the stack. Must exists before launching this stack!",
                                 "default": "/srv/data/docker/containers/honeypot"
                                },
                                {
				 "name": "OPENCANARY_NODE_ID",
				 "label": "Opencanary Node ID",
				 "description": " ",
			         "default": "honey-customise"
				},
				{
				 "name": "LOGS_PATH",
				 "label": "LOGS_PATH",
				 "description": "Path for logfiles. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/fail2ban/logs/honeypot"
				},
                                {
                                 "name": "CLAMAV_ENABLED",
                                 "label": "Enable ClamAV Antivirus?",
                                 "description": "Enable ClamAV Antivirus? [yes (Default), no]",
                                 "default": "yes"
                                },
                                {
                                 "name": "DNSBL_IPSET_START",
                                 "label": "DNSBL_IPSET_START",
                                 "description": "Start dnsbl-ipset.sh script? (Default yes, no to not start it)",
                                 "default": "yes"
                                },
                                {
                                 "name": "RSPAMD_START",
                                 "label": "RSPAMD_START",
                                 "description": "Start Rspamd? (Default yes, no to not start it)",
                                 "default": "yes"
                                },
                                {
                                 "name": "OPENCANARY_PROXY_PORT",
                                 "label": "OPENCANARY_PROXY_PORT",
                                 "description": "Host port used to redirect HTTP PROXY requests to OpenCanary",
                                 "default": "8080"
                                },
                                {
                                 "name": "OPENCANARY_HTTP_PORT",
                                 "label": "OPENCANARY_HTTP_PORT",
                                 "description": "Host port used to redirect HTTP requests to OpenCanary",
                                 "default": "80"
                                },
                                {
                                 "name": "OPENCANARY_HTTPS_PORT",
                                 "label": "OPENCANARY_HTTPS_PORT",
                                 "description": "Host port used to redirect HTTPS requests to OpenCanary",
                                 "default": "443"
                                }
			]
		},
		{
			"type": 2,
			"name": "nextcloud",
			"title": "Nextcloud app",
			"description": "Nextcloud, OnlyOffice, Nginx, MariaDB, FPM, Redis, cron",
			"note": "<h1>WARNING!!!</h1>Before starting this stack you need to create this files in /var/lib/mysql container directory:<br> - 'db-name.txt' (write in this file the name of the Nextcloud database)<br> - 'db-nextcloud.pwd' (password for the Nextcloud database user)<br> - 'db-root.pwd' (password for the MariaDB root user)<br> - 'db-user.txt' (name for the Nextcloud database user)<br><h2>Otherwise this stack will not works</h2>",
			"categories": ["web", "storage"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/nextcloud-logo-nm.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/nextcloud-stack-4-swarm-nm.yml"
			},
			"env": [{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/nextcloud-app"
				},
				{
				 "name": "NC_SHARE1",
				 "label": "NC_SHARE1",
				 "description": "_",
			         "default": "share1"
				},
				{
				 "name": "NC_SHARE2",
				 "label": "NC_SHARE2",
				 "description": "_",
			         "default": "share2"
				},
				{
				 "name": "NC_SHARE3",
				 "label": "NC_SHARE3",
				 "description": "_",
			         "default": "share3"
				},
                                {
                                 "name": "JWT_SECRET",
                                 "label": "JWT_SECRET",
                                 "description": "Put here the secret taken from Nextcloud config.php (jwt_secret parameter)",
                                 "default": "Set_here_the_secret_password_taken_from_Nextcloud_config.php"
                                }
			]
		},
		{
			"type": 3,
			"name": "nextcloud",
			"title": "Nextcloud app APACHE (compose version)",
			"description": "Nextcloud, OnlyOffice, Apache, MariaDB, Redis, cron",
			"note": "<h1>WARNING!!!</h1>Before starting this stack you need to create this files in /var/lib/mysql container directory:<br> - 'db-name.txt' (write in this file the name of the Nextcloud database)<br> - 'db-nextcloud.pwd' (password for the Nextcloud database user)<br> - 'db-root.pwd' (password for the MariaDB root user)<br> - 'db-user.txt' (name for the Nextcloud database user)<br><h2>Otherwise this stack will not works</h2>",
			"categories": ["web", "storage"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/nextcloud-logo-nm.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/nextcloud-apache-stack-4-compose-nm.yml"
			},
			"env": [{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/nextcloud-app"
				},
				{
				 "name": "NC_SHARE1",
				 "label": "NC_SHARE1",
				 "description": "_",
			         "default": "share1"
				},
				{
				 "name": "NC_SHARE2",
				 "label": "NC_SHARE2",
				 "description": "_",
			         "default": "share2"
				},
				{
				 "name": "NC_SHARE3",
				 "label": "NC_SHARE3",
				 "description": "_",
			         "default": "share3"
				},
                                {
                                 "name": "JWT_SECRET",
                                 "label": "JWT_SECRET",
                                 "description": "Put here the secret taken from Nextcloud config.php (jwt_secret parameter)",
                                 "default": "Set_here_the_secret_password_taken_from_Nextcloud_config.php"
                                }
			]
		},
		{
			"type": 3,
			"name": "nextcloud",
			"title": "Nextcloud app (compose version)",
			"description": "Nextcloud, OnlyOffice, Nginx, MariaDB, FPM, Redis, cron",
			"note": "<h1>WARNING!!!</h1>Before starting this stack you need to create this files in /var/lib/mysql container directory:<br> - 'db-name.txt' (write in this file the name of the Nextcloud database)<br> - 'db-nextcloud.pwd' (password for the Nextcloud database user)<br> - 'db-root.pwd' (password for the MariaDB root user)<br> - 'db-user.txt' (name for the Nextcloud database user)<br><h2>Otherwise this stack will not works</h2>",
			"categories": ["web", "storage"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/nextcloud-logo-nm.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/nextcloud-stack-4-swarm-nm.yml"
			},
			"env": [{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/nextcloud-app"
				},
				{
				 "name": "NC_SHARE1",
				 "label": "NC_SHARE1",
				 "description": "_",
			         "default": "share1"
				},
				{
				 "name": "NC_SHARE2",
				 "label": "NC_SHARE2",
				 "description": "_",
			         "default": "share2"
				},
				{
				 "name": "NC_SHARE3",
				 "label": "NC_SHARE3",
				 "description": "_",
			         "default": "share3"
				},
                                {
                                 "name": "JWT_SECRET",
                                 "label": "JWT_SECRET",
                                 "description": "Put here the secret taken from Nextcloud config.php (jwt_secret parameter)",
                                 "default": "Set_here_the_secret_password_taken_from_Nextcloud_config.php"
                                }
			]
		},
		{
			"type": 2,
			"name": "test",
			"title": "Test stack",
			"description": "A stack to do various tests",
			"note": "<h1>This stack does nothing</h1>It launches a bash shell that echoes the current date and exported vars every five seconds",
			"categories": ["tests"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/portainer-v2/man-at-intellectual-work.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/test.yml"
			},
			"env": [{
				 "name": "TEST_VAR1",
				 "label": "TEST_VAR1",
				 "description": "Write some text or nothing",
			         "default": ""
				},
				{
				 "name": "TEST_VAR2",
				 "label": "TEST_VAR2",
				 "description": "Write some text or nothing",
			         "default": ""
				},
				{
				 "name": "TEST_VAR3",
				 "label": "TEST_VAR3",
				 "description": "Write some text or nothing",
			         "default": ""
				}
			]
		},
		{
			"type": 1,
			"name": "rbldns",
			"title": "RBLdns by Neomediatech",
			"description": "lista rbl basata su file (container)",
			"note": "<h1>IMPORTANT:</h1>You must create the path where you host configurations, eg: <strong>mkdir -p /srv/data/docker/containers/rbldns</strong> <br/>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/nm-logo.png",
                        "image": "neomediatech/rbldns-static:latest",
                        "hostname": "rbldns",
                        "network": "host",
                        "ports": ["53:53/udp"],
                        "restart_policy": "always",
			"env": [{
				 "name": "RBL_DOMAIN",
				 "label": "RBL_DOMAIN",
				 "description": "Domain used to host the DNSBL lists",
			         "default": "rep.cdcd.it"
				},
				{
				 "name": "LOGGING",
				 "label": "LOGGING",
				 "description": "Enable DNS query logging? 1 -> Yes , 0 -> No",
			         "default": "1"
				},
				{
				 "name": "CUSTOM_ZONES",
				 "label": "CUSTOM_ZONES",
				 "description": "List of custom zones separated by comma (ex: mylist,otherlist.txt,third.list)"
				},
				{
				 "name": "CUSTOM_CONFIG",
				 "label": "CUSTOM_CONFIG",
				 "description": "Add custom config (ex: mybl.domain.tld:ip4set:blfile.txt)",
			         "default": "cbl.cdcd.it:ip4set:cbl.rbl asn.cdcd.it:generic:asndrop.strange-rbl auth.cdcd.it:ip4set:auth.rbl asn.cdcd.it:dnset:asn_neo-rbl"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/rbldns"
				},
				{
				 "name": "PORT",
				 "label": "PORT",
				 "description": "Port to listen to",
			         "default": "5353"
				}
			]
		},
		{
			"type": 3,
			"name": "webmail",
			"title": "Webmail based on Roundcube with Radicale by Neomediatech",
			"description": "Compose stack with Roundcube Webmail client with Redis cache and Radicale CardDAV/CalDAV server. Apache version",
			"note": "<h1>WARNING!</h1>You must create all paths prior to run this stack",
			"categories": [
				"Webmail"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/portainer-v2/roundcube-radicale-redis.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/webmail-roundcube-radicale-redis-apache-stack-4-compose.yml"
			},
			"env": [{
				 "name": "IMAP_HOST",
				 "label": "IMAP authentication server",
				 "description": " ",
			         "default": "10.2.0.1"
				},
				{
				 "name": "ROUNDCUBEMAIL_DB_HOST",
				 "label": "Roundcube DB server",
				 "description": " ",
			         "default": "10.2.0.1"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/webmail"
				},
                                {
                                 "name": "ROUNDCUBEMAIL_UPLOAD_MAX_FILESIZE",
                                 "label": "ROUNDCUBEMAIL_UPLOAD_MAX_FILESIZE",
                                 "description": "Max size to upload attachments",
                                 "default": "20M"
                                }
			]
		},
		{
			"type": 3,
			"name": "webmail",
			"title": "Webmail based on Roundcube with Radicale by Neomediatech",
			"description": "Compose stack with Roundcube Webmail client with Redis cache and Radicale CardDAV/CalDAV server. FPM version",
			"note": "<h1>WARNING!</h1>You must create all paths prior to run this stack",
			"categories": [
				"Webmail"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/portainer-v2/roundcube-radicale-redis.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/webmail-stack-4-compose.yml"
			},
			"env": [{
				 "name": "IMAP_HOST",
				 "label": "IMAP authentication server",
				 "description": " ",
			         "default": "10.2.0.1"
				},
				{
				 "name": "ROUNDCUBEMAIL_DB_HOST",
				 "label": "Roundcube DB server",
				 "description": " ",
			         "default": "10.2.0.1"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/webmail"
				},
                                {
                                 "name": "ROUNDCUBEMAIL_UPLOAD_MAX_FILESIZE",
                                 "label": "ROUNDCUBEMAIL_UPLOAD_MAX_FILESIZE",
                                 "description": "Max size to upload attachments",
                                 "default": "20M"
                                }
			]
		},
		{
			"type": 2,
			"name": "mail-tester",
			"title": "Mail tester by Neomediatech",
			"description": "Stack to check mail validity, NOT WORKING FOR NOW!",
			"note": " ",
			"categories": ["email"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/email.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/mail-tester.yml"
			},
			"env": [{
				 "name": "MAILTESTER_FQDN",
				 "label": "MAILTESTER_FQDN",
				 "description": "FQDN for the Mail-tester web app",
			         "default": ""
				},
				{
				 "name": "RSPAMD_FQDN",
				 "label": "RSPAMD_FQDN",
				 "description": "FQDN for the Rspamd web ui",
				 "default": ""
				},
				{
				 "name": "EXIM_LOGDIR",
				 "label": "EXIM_LOGDIR",
				 "description": "Path dei log di Exim (cambia solo se sai cosa stai facendo!)",
			         "default": "/data/logs"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Percorso base dello stack all'interno dell'host (deve esistere!)",
			         "default": "/srv/data/docker/containers/mail-tester"
				},
				{
				 "name": "HONEYPOT",
				 "label": "Am I a Honeypot?",
				 "description": "Normally false",
				 "select": [
				  {
				   "text": "false",
				   "value": "false",
				   "default": true
				  },
				  {
				   "text": "true",
				   "value": "true"
				  }
				 ]
                                },
				{
				 "name": "QUEUE_CYCLE",
				 "label": "QUEUE_CYCLE",
				 "description": "Tempo di avvio della coda",
			         "default": "10m"
				},
				{
				 "name": "CLAMAV_START",
				 "label": "CLAMAV_START",
				 "description": "Avvio ClamAV? (yes/no)",
			         "default": "yes"
				}
			]
		},
		{
			"type": 3,
			"name": "mail-tester",
			"title": "Mail tester by Neomediatech",
			"description": "Compose Stack to check mail validity, Caddy version",
			"note": "<h2>NOTA INTERNA</h2>Per i dati di configurazione fai riferimento al file '.env' che trovi nella directory dello stack, oppure compila a piacimento, oppure avvia da riga di comando con lo script apposito, presente nella directory dello stack",
			"categories": ["email"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/email.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/mail-tester-4compose-caddy.yml"
			},
			"env": [{
				 "name": "MAILTESTER_FQDN",
				 "label": "MAILTESTER_FQDN",
				 "description": "FQDN for the Mail-tester web app",
			         "default": ""
				},
				{
				 "name": "RSPAMD_FQDN",
				 "label": "RSPAMD_FQDN",
				 "description": "FQDN for the Rspamd web ui",
				 "default": ""
				},
				{
				 "name": "EXIM_LOGDIR",
				 "label": "EXIM_LOGDIR",
				 "description": "Path dei log di Exim (cambia solo se sai cosa stai facendo!)",
			         "default": "/data/logs"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Percorso base dello stack all'interno dell'host (deve esistere!)",
			         "default": "/srv/data/docker/containers/mail-tester"
				},
				{
				 "name": "HONEYPOT",
				 "label": "Am I a Honeypot?",
				 "description": "Normally false",
				 "select": [
				  {
				   "text": "false",
				   "value": "false",
				   "default": true
				  },
				  {
				   "text": "true",
				   "value": "true"
				  }
				 ]
                                },
				{
				 "name": "QUEUE_CYCLE",
				 "label": "QUEUE_CYCLE",
				 "description": "Tempo di avvio della coda",
			         "default": "10m"
				},
				{
				 "name": "CLAMAV_START",
				 "label": "CLAMAV_START",
				 "description": "Avvio ClamAV? (yes/no)",
			         "default": "yes"
				}
			]
		},

		{
			"type": 3,
			"name": "antispam",
			"title": "Antispam stack personalizzato per uso interno",
			"description": "Mancano Exim e Dovecot, è presente solo la parte antivirus/antispam per il momento. versione per Compose",
			"note": "<h1>WARNING!</h1>You must create all paths prior to run this stack",
			"categories": [
				"Antispam"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/nm-logo.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/antispam-stack-neo-4-compose.yml"
			},
			"env": [{
				 "name": "MYSQL_ROOT_PASSWORD",
				 "label": "Root password for MariaDB",
				 "description": " ",
			         "default": "put_your_password_here"
				},
				{
				 "name": "MYSQL_DATABASE",
				 "label": "Database name",
				 "description": " ",
			         "default": "your_database_name"
				},
				{
				 "name": "MYSQL_USER",
				 "label": "Database user",
				 "description": " ",
			         "default": "your_database_username"
				},
				{
				 "name": "MYSQL_PASSWORD",
				 "label": "Database password",
				 "description": " ",
			         "default": "your_database_password"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/antispam"
				}
			]
		},
		{
			"type": 3,
			"name": "webnettools",
			"title": "testssl, ping, traceroute, ecc...via web",
			"description": "Versione per Compose",
			"note": " ",
			"categories": [
				"Tools"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/webnettools.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/webnettools.yml"
			},
			"env": [{
				 "name": "AVAILABLE_TOOLS",
				 "label": "AVAILABLE_TOOLS",
				 "description": "limit the tools shown in the web frontend: testssl, ping, traceroute, nmap",
			         "default": "testssl, ping, traceroute"
				},
				{
				 "name": "RATE_LIMIT",
				 "label": "RATE_LIMIT",
				 "description": "(Optional) Rate limit - Limits the number of calls of a specific tool to a specific target (e.g. host). The value is set in milliseconds between consecutive calls.",
			         "default": "60000"
				},
				{
				 "name": "INTRO_TEXT",
				 "label": "INTRO_TEXT",
				 "description": "(Optional) Show an additional paragraph in front of the tool selection. This can be used to help the users in your specific environment. HTML tags are supported.",
			         "default": ""
				}
			]
		},
		{
			"type": 2,
			"name": "webnettools",
			"title": "testssl, ping, traceroute, ecc...via web",
			"description": "Versione per Swarm",
			"note": " ",
			"categories": [
				"Tools"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/webnettools.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/webnettools.yml"
			},
			"env": [{
				 "name": "AVAILABLE_TOOLS",
				 "label": "AVAILABLE_TOOLS",
				 "description": "limit the tools shown in the web frontend: testssl, ping, traceroute, nmap",
			         "default": "testssl, ping, traceroute"
				},
				{
				 "name": "RATE_LIMIT",
				 "label": "RATE_LIMIT",
				 "description": "(Optional) Rate limit - Limits the number of calls of a specific tool to a specific target (e.g. host). The value is set in milliseconds between consecutive calls.",
			         "default": "60000"
				},
				{
				 "name": "INTRO_TEXT",
				 "label": "INTRO_TEXT",
				 "description": "(Optional) Show an additional paragraph in front of the tool selection. This can be used to help the users in your specific environment. HTML tags are supported.",
			         "default": ""
				}
			]
		},
		{
			"type": 2,
			"name": "webnettools",
			"title": "testssl, ping, traceroute, ecc...via web (Traefik version)",
			"description": "Versione per Swarm con Traefik",
			"note": " ",
			"categories": [
				"Tools"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/webnettools.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/webnettools-4-traefik.yml"
			},
			"env": [{
				 "name": "FQDN_HOST",
                                 "label": "FQDN_HOST",
                                 "description": "FQDN where to host this service",
                                 "default": "webnettools.s.g..."
				},
				{
				 "name": "AVAILABLE_TOOLS",
				 "label": "AVAILABLE_TOOLS",
				 "description": "limit the tools shown in the web frontend: testssl, ping, traceroute, nmap",
			         "default": "testssl, ping, traceroute"
				},
				{
				 "name": "RATE_LIMIT",
				 "label": "RATE_LIMIT",
				 "description": "(Optional) Rate limit - Limits the number of calls of a specific tool to a specific target (e.g. host). The value is set in milliseconds between consecutive calls.",
			         "default": "60000"
				},
				{
				 "name": "INTRO_TEXT",
				 "label": "INTRO_TEXT",
				 "description": "(Optional) Show an additional paragraph in front of the tool selection. This can be used to help the users in your specific environment. HTML tags are supported.",
			         "default": ""
				}
			]
		},
		{
			"type": 2,
			"name": "whois",
			"title": "Whois for web & cli via curl (Traefik version)",
			"description": "Versione per Swarm con Traefik",
			"note": "Rate limited by traefik",
			"categories": [
				"Tools"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/nm-logo.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/whois-4-traefik.yml"
			},
			"env": [{
                                 "name": "STACK_BASE_PATH",
                                 "label": "STACK_BASE_PATH",
                                 "description": "Base path inside the host (must exists!)",
                                 "default": "/srv/data/docker/containers/whois"
                                },
                                {
				 "name": "FQDN_HOST",
                                 "label": "FQDN_HOST",
                                 "description": "FQDN where to host this service",
                                 "default": "whois.cd..."
				},
                                {
                                 "name": "RATELIMIT_AVERAGE",
                                 "label": "RATELIMIT_AVERAGE",
                                 "description": "How many requests accepted per IP?",
                                 "default": "1"
                                },
                                {
                                 "name": "RATELIMIT_PERIOD",
                                 "label": "RATELIMIT_PERIOD",
                                 "description": "Time period to evaluate RATELIMIT_AVERAGE",
                                 "default": "5s"
                                }
			]
		},
		{
			"type": 2,
			"name": "cvdupdate",
			"title": "ClamAV private signature repository (Traefik version)",
			"description": "Versione per Swarm con Traefik",
			"note": "_",
			"categories": [
				"Antivirus"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/nm-logo.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/cvdupdate-4-traefik.yml"
			},
			"env": [{
                                 "name": "STACK_BASE_PATH",
                                 "label": "STACK_BASE_PATH",
                                 "description": "Base path inside the host (must exists!)",
                                 "default": "/srv/data/docker/containers/cvdupdate"
                                },
                                {
				 "name": "FQDN_HOST",
                                 "label": "FQDN_HOST",
                                 "description": "FQDN where to host this service",
                                 "default": "clamav-db.s.g.."
				}
			]
		},
		{
			"type": 3,
			"name": "smtp-relay-antispam",
			"title": "SMTP Relay con antispam e antivirus",
			"description": "Exim, Rspamd, ClamAV e vari altri servizi di supporto. versione per Compose",
			"note": "<h1>WARNING!</h1>You must create all paths prior to run this stack<h2>NOTA INTERNA</h2>Per i dati di configurazione fai riferimento al file '.env' che trovi nella directory dello stack (oppure compila a piacimento)",
			"categories": [
				"Email","Antispam","SMTP Relay"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/portainer-v2/smtp-relay-antispam.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/smtp-relay-antispam-stack-neo-4-compose.yml"
			},
			"env": [{
				 "name": "MYSQL_ROOT_PASSWORD",
				 "label": "MYSQL_ROOT_PASSWORD",
				 "description": "Root password for MariaDB",
			         "default": "put_your_password_here"
				},
				{
				 "name": "MYSQL_DATABASE",
				 "label": "MYSQL_DATABASE",
				 "description": "Database name",
			         "default": "your_database_name"
				},
				{
				 "name": "MYSQL_USER",
				 "label": "MYSQL_USER",
				 "description": "Database user",
			         "default": "your_database_username"
				},
				{
				 "name": "MYSQL_PASSWORD",
				 "label": "MYSQL_PASSWORD",
				 "description": "Database password",
			         "default": "your_database_password"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/smtp-relay-antispam"
				},
                                {
                                 "name": "MAILSERVER_CERT",
                                 "label": "MAILSERVER_CERT",
                                 "description": "FQDN server name for the SSL/TLS certificate, will not be automatically generated",
                                 "default": "noservername.domain.tld"
                                }
			]
		},
		{
			"type": 3,
			"name": "smtp-relay-antispam",
			"title": "SMTP Relay con antispam e antivirus (ERMES version)",
			"description": "Versione senza Exim, Rspamd e ClamAV, stack dedicato a ERMES, SMTP primario. Versione per Compose",
			"note": "<h1>WARNING!</h1>You must create all paths prior to run this stack<h2>NOTA INTERNA</h2>Per i dati di configurazione fai riferimento al file '.env' che trovi nella directory dello stack, oppure compila a piacimento, oppure avvia da riga di comando con lo script apposito, presente nella directory dello stack",
			"categories": [
				"Email","Antispam","SMTP Relay"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/portainer-v2/smtp-relay-antispam.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/smtp-relay-antispam-stack-neo-4-compose-primary.yml"
			},
			"env": [{
				 "name": "MYSQL_ROOT_PASSWORD",
				 "label": "MYSQL_ROOT_PASSWORD",
				 "description": "Root password for MariaDB",
			         "default": "put_your_password_here"
				},
				{
				 "name": "MYSQL_DATABASE",
				 "label": "MYSQL_DATABASE",
				 "description": "Database name",
			         "default": "your_database_name"
				},
				{
				 "name": "MYSQL_USER",
				 "label": "MYSQL_USER",
				 "description": "Database user",
			         "default": "your_database_username"
				},
				{
				 "name": "MYSQL_PASSWORD",
				 "label": "MYSQL_PASSWORD",
				 "description": "Database password",
			         "default": "your_database_password"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/smtp-relay-antispam"
				},
                                {
                                 "name": "MAILSERVER_CERT",
                                 "label": "MAILSERVER_CERT",
                                 "description": "FQDN server name for the SSL/TLS certificate, will not be automatically generated",
                                 "default": "noservername.domain.tld"
                                }
			]
		},
		{
			"type": 3,
			"name": "rescue-ip",
			"title": "Web app per il check di un indirizzo IP nella nostra blacklist",
			"description": "Applicazione web per verificare la presenza di un indirizzo IP nelle nostre blacklist e per chiederne la rimozione",
			"note": "<h1>WARNING!</h1>You must create all paths prior to run this stack<h2>NOTA INTERNA</h2>Per i dati di configurazione fai riferimento al file '.env' che trovi nella directory dello stack (oppure compila a piacimento)",
			"categories": ["Web","Tools"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/portainer-v2/ipblock-log.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/rescue-ip-stack-4-compose.yml"
			},
			"env": [{
				 "name": "LISTEN_IP",
				 "label": "IP address to listen to",
				 "description": " ",
			         "default": "127.1.0.1"
				},
				{
				 "name": "CERTBOT_BASE_PATH",
				 "label": "Path to certbot container",
				 "description": " ",
			         "default": "/srv/certbot"
				},
                                {
				 "name": "EXTRA_HOST",
				 "label": "extra host to add to dns internal resolution",
				 "description": " ",
			         "default": "thor:10.2.0.1"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/rescue_ip"
				}
			]
		},
		{
			"type": 1,
			"name": "clamav",
			"title": "ClamAV by Neomediatech",
			"description": "Dockerized ClamAV",
			"note": "<h2>For custom configs put clamd.conf and/or freshclam.conf in 'conf' host folder</h2><h1>make folders: </h1>BASE_DIR='/srv/data/docker/containers/clamav' <br>mkdir -p $BASE_DIR/{defs,unoff-defs,conf} && chmod 777 $BASE_DIR/{defs,unoff-defs}",
			"categories": [
				"AntiVirus"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/clamav/master/clamav_neo.png",
			"image": "neomediatech/clamav:latest",
			"hostname": "clamav",
			"network": "bridge",
                        "ports": ["3310:3310/tcp"],
			"volumes": [
			  {
			    "container": "/data",
			    "bind": "/srv/data/docker/containers/clamav/conf"
			  },
			  {
			    "container": "/var/lib/clamav",
			    "bind": "/srv/data/docker/containers/clamav/defs"
			  },
			  {
			    "container": "/var/lib/clamav-unofficial-sigs",
			    "bind": "/srv/data/docker/containers/clamav/unoff-defs"
			  }
			],
			"restart_policy": "always"
		},
		{
			"type": 1,
			"name": "radicale",
			"title": "Radicale by Neomediatech",
			"description": "Radicale is a CalDAV (calendars, to-do lists) and CardDAV (contacts) server",
			"note": "<h1>create folders: </h1>BASE_DIR='/srv/data/docker/containers/radicale' <br>mkdir -p $BASE_DIR/data && chmod 777 $BASE_DIR/data",
			"categories": [
				"Mail"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/radicale/master/radicale-nm.png",
			"image": "neomediatech/radicale:latest",
			"hostname": "radicale",
			"network": "bridge",
                        "ports": ["5233:5232/tcp"],
			"volumes": [
			  {
			    "container": "/radicale.conf",
			    "bind": "/srv/data/docker/containers/radicale/radicale.conf",
			    "readonly": true
			  },
			  {
			    "container": "/data",
			    "bind": "/srv/data/docker/containers/radicale/data"
			  }
			],
			"restart_policy": "always",
                        "env": [{
                                 "name": "IMAP_HOST",
                                 "label": "IMAP_HOST",
                                 "description": "IMAP host to connect to",
                                 "default": "10.2.0.1"
                                },
                                {
                                 "name": "STACK_BASE_PATH",
                                 "label": "STACK_BASE_PATH",
                                 "description": "Path for the stack. Must exists before launching this stack!",
                                 "default": "/srv/data/docker/containers/radicale"
                                }
                        ]
		},
    {
      "type": 1,
      "title": "⚡⚡⚡⚡⚡ Portainer default templates ⚡⚡⚡⚡⚡",
      "description": "⛔⛔⛔⛔⛔ Da qui in poi ci sono i template di default di Portainer",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "image": "scratch"
    },
    {
      "type": 2,
      "title": "⚡⚡⚡⚡⚡ Portainer default templates ⚡⚡⚡⚡⚡",
      "description": "⛔⛔⛔⛔⛔ Da qui in poi ci sono i template di default di Portainer",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "image": "scratch"
    },
    {
      "type": 3,
      "title": "⚡⚡⚡⚡⚡ Portainer default templates ⚡⚡⚡⚡⚡",
      "description": "⛔⛔⛔⛔⛔ Da qui in poi ci sono i template di default di Portainer",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "image": "scratch"
    },
    {
      "type": 4,
      "title": "⚡⚡⚡⚡⚡ Portainer default templates ⚡⚡⚡⚡⚡",
      "description": "⛔⛔⛔⛔⛔ Da qui in poi ci sono i template di default di Portainer",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "image": "scratch"
    },
    {
      "type": 1,
      "title": "Registry",
      "description": "Docker image registry",
      "categories": ["docker"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "ports": ["5000/tcp"],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ]
    },
    {
      "type": 1,
      "title": "Registry (cache)",
      "description": "Docker image registry configured as a DockerHub pull through cache",
      "categories": ["docker"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "ports": ["5000/tcp"],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ],
      "env": [
        {
          "name": "REGISTRY_PROXY_REMOTEURL",
          "default": "https://registry-1.docker.io",
          "preset": true
        }
      ]
    },
    {
      "type": 1,
      "title": "Ubuntu",
      "description": "Debian-based Linux operating system",
      "categories": ["operating-system"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ubuntu.png",
      "image": "ubuntu:latest",
      "interactive": true,
      "command": "/bin/bash"
    },
    {
      "type": 1,
      "title": "NodeJS",
      "description": "JavaScript-based platform for server-side and networking applications",
      "categories": ["development"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/node.png",
      "image": "node:latest",
      "interactive": true,
      "command": "/bin/bash"
    },
    {
      "type": 1,
      "title": "Nginx",
      "description": "High performance web server",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
      "image": "nginx:latest",
      "ports": ["80/tcp", "443/tcp"],
      "volumes": [
        {
          "container": "/etc/nginx"
        },
        {
          "container": "/usr/share/nginx/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Httpd",
      "description": "Open-source HTTP server",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
      "image": "httpd:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/usr/local/apache2/htdocs/"
        }
      ]
    },
    {
      "type": 1,
      "title": "Caddy",
      "description": "Open-source web server with automatic HTTPS written in Go",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/caddy.png",
      "image": "caddy:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "MySQL",
      "description": "The most popular open-source database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
      "image": "mysql/mysql-server:5.7",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        },
        {
          "name": "MYSQL_ROOT_HOST",
          "default": "%",
          "preset": true
        }
      ],
      "ports": ["3306/tcp"],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "type": 1,
      "title": "MariaDB",
      "description": "Performance beyond MySQL",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mariadb.png",
      "image": "mariadb:latest",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "ports": ["3306/tcp"],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "type": 1,
      "title": "PostgreSQL",
      "description": "The most advanced open-source database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
      "image": "postgres:latest",
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "Superuser"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Superuser password"
        }
      ],
      "ports": ["5432/tcp"],
      "volumes": [
        {
          "container": "/var/lib/postgresql/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Mongo",
      "description": "Open-source document-oriented database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
      "image": "mongo:latest",
      "ports": ["27017/tcp"],
      "volumes": [
        {
          "container": "/data/db"
        }
      ]
    },
    {
      "type": 1,
      "title": "CrateDB",
      "description": "An open-source distributed SQL database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cratedb.png",
      "image": "crate:latest",
      "ports": ["4200/tcp", "4300/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Elasticsearch",
      "description": "Open-source search and analytics engine",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
      "image": "docker.elastic.co/elasticsearch/elasticsearch:7.15.1",
      "ports": ["9200/tcp", "9300/tcp"],
      "volumes": [
        {
          "container": "/usr/share/elasticsearch/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "GitLab CE",
      "description": "Open-source end-to-end software development platform",
      "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/ee/install/docker.html\" target=\"_blank\">GitLab documentation</a> to get started.",
      "categories": ["development", "project-management"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
      "image": "gitlab/gitlab-ce:latest",
      "ports": ["80/tcp", "443/tcp", "22/tcp"],
      "volumes": [
        {
          "container": "/etc/gitlab"
        },
        {
          "container": "/var/log/gitlab"
        },
        {
          "container": "/var/opt/gitlab"
        }
      ]
    },
    {
      "type": 1,
      "title": "Minio",
      "description": "A distributed object storage server built for cloud applications and devops",
      "categories": ["storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
      "image": "quay.io/minio/minio:latest",
      "ports": ["9000/tcp", "9001/tcp"],
      "env": [
        {
          "name": "MINIO_ROOT_USER",
          "label": "Root user"
        },
        {
          "name": "MINIO_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "volumes": [
        {
          "container": "/data"
        },
        {
          "container": "/root/.minio"
        }
      ],
      "command": "server /data --console-address ':9001'"
    },
    {
      "type": 1,
      "title": "Scality S3",
      "description": "Standalone AWS S3 protocol server",
      "categories": ["storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/scality-s3.png",
      "image": "scality/s3server",
      "ports": ["8000/tcp"],
      "env": [
        {
          "name": "SCALITY_ACCESS_KEY",
          "label": "Scality S3 access key"
        },
        {
          "name": "SCALITY_SECRET_KEY",
          "label": "Scality S3 secret key"
        }
      ],
      "volumes": [
        {
          "container": "/usr/src/app/localData"
        },
        {
          "container": "/usr/src/app/localMetadata"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server",
      "description": "Microsoft SQL Server on Linux",
      "categories": ["database"],
      "platform": "linux",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "mcr.microsoft.com/mssql/server:2019-latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "SA_PASSWORD",
          "label": "SA password"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server",
      "description": "Microsoft SQL Server Developer for Windows containers",
      "categories": ["database"],
      "platform": "windows",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "microsoft/mssql-server-windows-developer:latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "sa_password",
          "label": "SA password"
        }
      ],
      "volumes": [
        {
          "container": "C:/temp/"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server Express",
      "description": "Microsoft SQL Server Express for Windows containers",
      "categories": ["database"],
      "platform": "windows",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "microsoft/mssql-server-windows-express:latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "sa_password",
          "label": "SA password"
        }
      ],
      "volumes": [
        {
          "container": "C:/temp/"
        }
      ]
    },
    {
      "type": 1,
      "title": "Solr",
      "description": "Open-source enterprise search platform",
      "categories": ["search-engine"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/solr.png",
      "image": "solr:latest",
      "ports": ["8983/tcp"],
      "volumes": [
        {
          "container": "/opt/solr/mydata"
        }
      ]
    },
    {
      "type": 1,
      "title": "Redis",
      "description": "Open-source in-memory data structure store",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "image": "redis:latest",
      "ports": ["6379/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
		{
			"type": 2,
			"title": "Swarm monitoring",
			"description": "Monitor your cluster performances with Prometheus & Grafana",
			"note": "Requires Docker version 19.03.0+. <b>Make sure to add the <code>monitoring == true</code> one of your Swarm manager node before deploying this stack.</b>",
			"categories": [
				"Monitoring"
			],
			"platform": "linux",
			"logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
			"repository": {
				"url": "https://github.com/portainer/templates",
				"stackfile": "swarm/monitoring/docker-compose.yml"
			},
			"env": [
				{
					"name": "GRAFANA_USER",
					"label": "Grafana admin user",
					"default": "admin"
				},
				{
					"name": "GRAFANA_PASSWORD",
					"label": "Grafana admin password"
				}
			]
		},    
    {
      "type": 2,
      "title": "Redis Cluster",
      "description": "Open-source in-memory data structure store - Cluster mode",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/redis-cluster/docker-stack.yaml"
      },
      "env": [
        {
          "name": "REDIS_PASSWD",
          "label": "Redis password"
        }
      ]
    },
    {
      "type": 1,
      "title": "RabbitMQ",
      "description": "Highly reliable enterprise messaging system",
      "categories": ["messaging"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
      "image": "rabbitmq:latest",
      "ports": ["5671/tcp", "5672/tcp"],
      "volumes": [
        {
          "container": "/var/lib/rabbitmq"
        }
      ]
    },
    {
      "type": 1,
      "title": "Ghost",
      "description": "Free and open-source blogging platform",
      "categories": ["blog"],
      "note": "Access the blog management interface under <code>/ghost/</code>.",
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ghost.png",
      "image": "ghost:latest",
      "ports": ["2368/tcp"],
      "volumes": [
        {
          "container": "/var/lib/ghost/content"
        }
      ]
    },
    {
      "type": 1,
      "title": "Joomla",
      "description": "Another free and open-source CMS",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/joomla.png",
      "image": "joomla:latest",
      "env": [
        {
          "name": "JOOMLA_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "JOOMLA_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Drupal",
      "description": "Open-source content management framework",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/drupal.png",
      "image": "drupal:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Plone",
      "description": "A free and open-source CMS built on top of Zope",
      "note": "Default user and password are admin/admin",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plone.png",
      "image": "plone:latest",
      "ports": ["8080/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Sematext Docker Agent",
      "description": "Collect logs, metrics and docker events",
      "categories": ["Log Management", "Monitoring"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
      "image": "sematext/sematext-agent-docker:latest",
      "name": "sematext-agent",
      "privileged": true,
      "env": [
        {
          "name": "LOGSENE_TOKEN",
          "label": "Logs token"
        },
        {
          "name": "SPM_TOKEN",
          "label": "SPM monitoring token"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ]
    },
    {
      "type": 1,
      "title": "Datadog agent",
      "description": "Collect events and metrics",
      "categories": ["Monitoring"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
      "image": "datadog/agent:latest",
      "env": [
        {
          "name": "DD_API_KEY",
          "label": "Datadog API key"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock",
          "readonly": true
        },
        {
          "container": "/host/sys/fs/cgroup",
          "bind": "/sys/fs/cgroup",
          "readonly": true
        },
        {
          "container": "/host/proc",
          "bind": "/proc",
          "readonly": true
        }
      ]
    },
    {
      "type": 1,
      "title": "Mautic",
      "description": "Open-source marketing automation platform",
      "categories": ["marketing"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
      "image": "mautic/mautic:latest",
      "env": [
        {
          "name": "MAUTIC_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "MAUTIC_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Jenkins",
      "description": "Open-source continuous integration tool",
      "categories": ["continuous-integration"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
      "image": "jenkins/jenkins:lts-jdk11",
      "ports": ["8080/tcp", "50000/tcp"],
      "volumes": [
        {
          "container": "/var/jenkins_home"
        }
      ]
    },
    {
      "type": 1,
      "title": "Redmine",
      "description": "Open-source project management tool",
      "note": "Default user and password are admin/admin",
      "categories": ["project-management"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redmine.png",
      "image": "redmine:latest",
      "ports": ["3000/tcp"],
      "volumes": [
        {
          "container": "/usr/src/redmine/files"
        }
      ]
    },
    {
      "type": 1,
      "title": "File browser",
      "description": "A web file manager",
      "note": "Default credentials: admin/admin",
      "categories": ["filesystem", "storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/filebrowser.png",
      "image": "filebrowser/filebrowser:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/data"
        },
        {
          "container": "/srv"
        }
      ],
      "command": "--port 80 --database /data/database.db --root /srv"
    },
    {
      "type": 1,
      "title": "CommandBox",
      "description": "ColdFusion (CFML) CLI",
      "categories": ["development"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-commandbox.png",
      "image": "ortussolutions/commandbox:latest",
      "env": [
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": ["8080/tcp", "8443/tcp"]
    },
    {
      "type": 1,
      "title": "ContentBox",
      "description": "Open-source modular CMS",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-contentbox.png",
      "image": "ortussolutions/contentbox:latest",
      "env": [
        {
          "name": "express",
          "default": "true",
          "preset": true
        },
        {
          "name": "install",
          "default": "true",
          "preset": true
        },
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": ["8080/tcp", "8443/tcp"],
      "volumes": [
        {
          "container": "/data/contentbox/db"
        },
        {
          "container": "/app/includes/shared/media"
        }
      ]
    },
    {
      "type": 1,
      "title": "Dokku",
      "description": "Dokku setup as a container",
      "categories": ["PaaS"],
      "platform": "linux",
      "logo": "",
      "image":"dokku/dokku",
      "ports": ["22/tcp", "80/tcp", "443/tcp"],
      "volumes": [{
        "container": "/mnt/dokku",
        "bind": "/var/lib/dokku"
      },
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }],
      "env":[
        {
          "name": "DOKKU_HOSTNAME",
          "label": "Dokku hostname",
          "description": "Global hostname to be registered by Dokku"
        },
        {
          "name": "DOKKU_HOST_ROOT",
          "label": "Dokku host root",
          "default": "/var/lib/dokku/home/dokku",
          "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'"
        }
      ]
    },
    {
      "type": 1,
      "title": "OPC Router",
      "description": "No-code middleware for industrial applications. The OPC Router connects PLCs, PCS, SCADA, MES, SQL databases and servers, label printers, e-mail servers and erp-systems via OPC UA, MQTT, REST, CSV and many others without any programming effort",
      "note": "More information about the <a href=\"https://www.opc-router.com/terms-of-use-and-eula/?utm_source=DockerHub_runtime&utm_medium=click&utm_campaign=TermsOfUseAndEula\" target=\"_blank\">EULA</a>.",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/opc-router.png",
      "image": "opcrouter/runtime:latest",
      "ports": ["49429/tcp", "8080/tcp", "8081/tcp"],
      "env": [
        {
          "name": "INITIAL_USERNAME",
          "label": "Initial Admin User user"
        },
        {
          "name": "INITIAL_PASSWORD",
          "label": "Inital Admin User Password"
        },
        {
          "name": "OR_I_ACCEPT_EULA",
          "label": "Accept EULA",
          "select": [
            {
              "text": "Yes, I accept",
              "value": "true",
              "default": true
            }
          ]
        }
      ],
      "volumes": [
        {
          "container": "/data/database"
        },
        {
          "container": "/inray"
        },
	      {
          "container": "/var/log/opcrouter"
        }      
      ]
    },
    {
      "type": 1,
      "title": "Floating License Server",
      "description": "License Server for Softing edgeConnector products",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/floating-license-server:latest",
      "ports": ["6200/tcp"],
      "interactive": true,
      "volumes": [
        {
          "container": "/licsrv/licenses"
        }
      ]
    },
    {
      "type": 1,
      "title": "EdgeConnector Modbus",
      "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-modbus:latest",
      "ports": ["443/tcp", "8099/tcp", "4897/tcp"]
    },
    {
      "type": 1,
      "title": "EdgeConnector 840D",
      "description": "Access Siemens SINUMERIK 840D sl/pl controllers and provide data via OPC UA and MQTT",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-840d",
      "ports": ["443/tcp", "8099/tcp", "4897/tcp"]
    },
    {
      "type": 1,
      "title": "EdgeConnector Siemens",
      "description": "Connect Siemens SIMATIC S7-300/400/1200/1500 PLCs and provide the data via OPC UA and MQTT",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-siemens",
      "ports": ["443/tcp", "8099/tcp", "4897/tcp"]
    },
    {
      "type": 1,
      "title": "EdgeConnector FANUC CNC",
      "description": "Connect FANUC CNCs and provide the data via OPC UA and MQTT",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-fanuc-cnc",
      "ports": ["443/tcp", "8099/tcp", "4897/tcp"],
      "env": [
        {
          "name": "TZ",
          "label": "TZ"
        }
      ],
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/mqtt"
        }     
      ]
    },
    {
      "type": 1,
      "title": "EdgeConnector Aggregator",
      "description": "Offers a powerful OPC UA aggregation service which provides data via OPC UA, as well as MQTT",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeaggregator",
      "ports": ["443/tcp", "8099/tcp", "4897/tcp"],
      "env": [
        {
          "name": "TZ",
          "label": "TZ"
        }
      ],
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/mqtt"
        }     
      ]
    },
    {
      "type": 2,
      "title": "Portainer Agent",
      "description": "Manage all the resources in your Swarm cluster",
      "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/portainer-agent/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "OpenFaaS",
      "name": "func",
      "description": "Serverless functions made simple",
      "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
      "categories": ["serverless"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
      "repository": {
        "url": "https://github.com/openfaas/faas",
        "stackfile": "docker-compose.yml"
      }
    },
    {
      "type": 2,
      "title": "IronFunctions",
      "description": "Open-source serverless computing platform",
      "note": "Deploys the IronFunctions API and UI.",
      "categories": ["serverless"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/ironfunctions/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "CockroachDB",
      "description": "CockroachDB cluster",
      "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/cockroachdb/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "WordPress",
      "description": "WordPress setup with a MySQL database",
      "note": "Deploys a WordPress instance connected to a MySQL database.",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/wordpress/docker-stack.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "type": 3,
      "title": "WordPress",
      "description": "WordPress setup with a MySQL database",
      "note": "Deploys a WordPress instance connected to a MySQL database.",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/wordpress/docker-compose.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "type": 3,
      "title": "OpenAMT",
      "description": "OpenAMT Cloud Toolkit",
      "note": "MPS password needs to be 8-32 characters including one uppercase, one lowercase letters, one base-10 digit and one special character.",
      "categories": ["Cloud"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/openamt/docker-compose.yml"
      },
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "Database user"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Database password"
        },
        {
          "name": "MPS_USER",
          "label": "MPS user"
        },
        {
          "name": "MPS_PASSWORD",
          "label": "MPS password"
        },
        {
          "name": "MPS_COMMON_NAME",
          "label": "MPS URL",
          "description": "Used to connect to the MPS API."
        },
        {
          "name": "MPS_SECRET",
          "label": "MPS Secret",
          "description": "Strong secret key used to log into MPS."
        },
        {
          "name": "VAULT_SECRET",
          "label": "Vault secret",
          "description": "Secret token used to log into Vault (don't include '.' character)."
        }
      ]
    },
    {
      "type": 2,
      "title": "Microsoft OMS Agent",
      "description": "Microsoft Operations Management Suite Linux agent.",
      "categories": ["OPS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/microsoft-oms/docker-stack.yml"
      },
      "env": [
        {
          "name": "AZURE_WORKSPACE_ID",
          "label": "Workspace ID",
          "description": "Azure Workspace ID"
        },
        {
          "name": "AZURE_PRIMARY_KEY",
          "label": "Primary key",
          "description": "Azure primary key"
        }
      ]
    },
    {
      "title": "Sematext Docker Agent",
      "type": 2,
      "categories": ["Log Management", "Monitoring"],
      "description": "Collect logs, metrics and docker events",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/sematext-agent-docker/docker-stack.yml"
      },
      "env": [
        {
          "name": "LOGSENE_TOKEN",
          "label": "Logs token"
        },
        {
          "name": "SPM_TOKEN",
          "label": "SPM monitoring token"
        }
      ]
    },
    {
      "title": "Datadog agent",
      "type": 2,
      "categories": ["Monitoring"],
      "description": "Collect events and metrics",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/datadog-agent/docker-stack.yml"
      },
      "env": [
        {
          "name": "API_KEY",
          "label": "Datadog API key"
        }
      ]
    },
    {
      "type": 3,
      "title": "FDO",
      "description": "FDO",
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/fdo/docker-stack.yml"
      },
      "env": [
        {
          "name": "owner_api_user",
          "label": "API Username"
        },
        {
          "name": "owner_api_password",
          "label": "API Password"
        }
      ]
    },
    {
      "type": 3,
      "title": "Dokku",
      "description": "Dokku setup as a compose file",
      "categories": ["PaaS"],
      "platform": "linux",
      "logo": "",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/dokku/docker-compose.yml"
      },
      "env": [
        {
          "name": "VERSION",
          "label": "Dokku version",
          "description": "Version of Dokku to use ('latest' if empty)",
          "default": "latest"
        },
        {
          "name": "DOKKU_HOSTNAME",
          "label": "Dokku hostname",
          "description": "Global hostname to be registered by Dokku"
        },
        {
          "name": "VOLUME_PATH",
          "label": "Dokku volume path",
          "description": "Host path to be bound to /mnt/dokku (`/var/lib/dokku` if empty)",
          "default": "/var/lib/dokku"
        },
        {
          "name": "DOKKU_HOST_ROOT",
          "label": "Dokku host root",
          "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'",
          "default": "/var/lib/dokku/home/dokku"
        },
        {
          "name": "SSH_PORT",
          "label": "SSH port",
          "description": "Host port to expose SSH port of Dokku (22 if empty)",
          "default": "22"
        },
        {
          "name": "HTTP_PORT",
          "label": "HTTP port",
          "description": "Host port to expose HTTP port of Dokku (80 if empty)",
          "default": "80"
        },
        {
          "name": "HTTPS_PORT",
          "label": "HTTPS port",
          "description": "Host port to expose HTTPS port of Dokku (443 if empty)",
          "default": "443"
        }
      ]
    },
    {
      "type": 2,
      "title": "LiveSwitch",
      "description": "A basic LiveSwitch stack with gateway, caching, database and media server",
      "categories": ["media"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/liveswitch/docker-stack.yml"
      },
      "env": [
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Postgres password"
        }
      ]
    },
    {
      "type": 3,
      "title": "LiveSwitch",
      "description": "A basic LiveSwitch compose with gateway, caching, database and media server",
      "categories": ["media"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/liveswitch/docker-compose.yml"
      },
      "env": [
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Postgres password"
        }
      ]
    },
    {
      "type": 3,
      "title": "TOSIBOX Lock for Container",
      "description": "Lock for Container brings secure connectivity inside your industrial IoT devices",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/tosibox.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/tosibox/docker-compose.yml"
      },
      "env": [
        {
          "name": "LICENSE_KEY",
          "label": "License key"
        }
      ]
    },
    {
      "type": 3,
      "title": "Pro Mosquitto with Management Center",
      "description": "Commercial-grade Mosquitto MQTT broker with Management Center",
      "note": "The Mosquitto broker password must be at least 12 characters.",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cedalo.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "edge/cedalo-mosquitto-mc/docker-compose.yml"
      },
      "env": [
        {
          "name": "CEDALO_LICENSE_KEY",
          "label": "License key"
        },
        {
          "name": "CEDALO_MOSQUITTO_PASSWORD",
          "label": "Mosquitto password"
        },
        {
          "name": "CEDALO_MC_USER",
          "label": "Management Center username",
          "default": "cedalo"
        },
        {
          "name": "CEDALO_MC_PASSWORD",
          "label": "Management Center password"
        }
      ]
    },
    {
      "type": 4,
      "title": "Softing EdgeConnector modbus",
      "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-modbus/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "Softing EdgeConnector 840D",
      "description": "Access Siemens SINUMERIK 840D sl/pl controllers and provide data via OPC UA and MQTT",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-840d/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "Softing EdgeConnector Siemens",
      "description": "Connect Siemens SIMATIC S7-300/400/1200/1500 PLCs and provide the data via OPC UA and MQTT",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-siemens/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "Softing EdgeConnector FANUC CNC",
      "description": "Connect FANUC CNCs and provide the data via OPC UA and MQTT",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-fanuc-cnc/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "Softing EdgeConnector Aggregator",
      "description": "Offers a powerful OPC UA aggregation service which provides data via OPC UA, as well as MQTT",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-aggregator/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "OPC Router",
      "description": "No-code middleware for industrial applications",
      "note": "More information about the <a href=\"https://www.opc-router.com/terms-of-use-and-eula/?utm_source=DockerHub_runtime&utm_medium=click&utm_campaign=TermsOfUseAndEula\" target=\"_blank\">EULA</a>.",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/opc-router/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "Pro Mosquitto with Management Center",
      "description": "Commercial-grade Mosquitto MQTT broker with Management Center",
      "note": "Use <b>admin</b> as the default username to connect to the Management Center.",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/cedalo-mosquitto-mc/docker-compose.yml"
    },
    {
      "type": 3,
      "title": "Manubes Edge Node",
      "description": "High-performance cloud platform for industrial production management. Manubes is a no-code solution that is used to structure, monitor and control production data, systems and processes in the cloud.",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/inray-manubes.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "edge/inray-manubes-edge-node/docker-compose.yml"
      },
      "env": [
        {
          "name": "MANUBES_SECRET",
          "label": "manubes secret"
        },
        {
          "name": "ACCEPT_EULA",
          "label": "Accept EULA",
          "select": [
            {
              "text": "Yes, I accept",
              "value": "true",
              "default": true
            }
          ]
        }
      ]
    },
    {
      "type": 1,
      "title": "⚡⚡⚡⚡⚡ FINE Portainer default templates ⚡⚡⚡⚡⚡",
      "description": "⛔⛔⛔⛔⛔ Da qui in SU ci sono i template di default di Portainer",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "image": "scratch"
    },
    {
      "type": 2,
      "title": "⚡⚡⚡⚡⚡ FINE Portainer default templates ⚡⚡⚡⚡⚡",
      "description": "⛔⛔⛔⛔⛔ Da qui in SU ci sono i template di default di Portainer",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "image": "scratch"
    },
    {
      "type": 3,
      "title": "⚡⚡⚡⚡⚡ FINE Portainer default templates ⚡⚡⚡⚡⚡",
      "description": "⛔⛔⛔⛔⛔ Da qui in SU ci sono i template di default di Portainer",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "image": "scratch"
    },
    {
      "type": 4,
      "title": "⚡⚡⚡⚡⚡ FINE Portainer default templates ⚡⚡⚡⚡⚡",
      "description": "⛔⛔⛔⛔⛔ Da qui in SU ci sono i template di default di Portainer",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "image": "scratch"
    }
 

  ]
} 
