{
  "version": "2",
	"templates": [
		{
			"type": 2,
			"name": "ipblock-log",
			"title": "IP Block Log by Neomediatech",
			"description": "Log degli IP bloccati, inseriti in un db MariaDB",
			"note": "<h1>IMPORTANT:</h1>You must create the path where you host configurations, eg: <strong>mkdir -p /srv/data/docker/containers/ipblock-log</strong> <br/>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/ipblock-log.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/ipblock-log.yml"
			},
			"env": [{
				 "name": "DOMAIN",
				 "label": "DOMAIN",
				 "description": "Base domain used to create FQDN addresses for let's encrypt",
			         "default": "c.glob***.i*"
				},
				{
				 "name": "TRAEFIK_WHITELIST",
				 "label": "TRAEFIK_WHITELIST",
				 "description": "elenco di classi/ip autorizzate ad attraversare traefik, separati da virgola",
			         "default": "127.0.0.1, ..."
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/ipblock-log"
				}
			]
		},
		{
			"type": 2,
			"name": "rbldns",
			"title": "RBLdns by Neomediatech",
			"description": "lista rbl basata su file",
			"note": "<h1>IMPORTANT:</h1>You must create the path where you host configurations, eg: <strong>mkdir -p /srv/data/docker/containers/rbldns</strong> <br/>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/nm-logo.png",
			"repository": {
				"url": "https://github.com/Neomediatech/rbldns",
				"stackfile": "docker-compose.yml"
			},
			"env": [{
				 "name": "RBL_DOMAIN",
				 "label": "RBL_DOMAIN",
				 "description": "Domain used to host the DNSBL lists",
			         "default": "rep.cdcd.it"
				},
				{
				 "name": "LOGGING",
				 "label": "LOGGING",
				 "description": "Enable DNS query logging? 1 -> Yes , 0 -> No",
			         "default": "1"
				},
				{
				 "name": "CUSTOM_ZONES",
				 "label": "CUSTOM_ZONES",
				 "description": "List of custom zones separated by comma (ex: mylist,otherlist.txt,third.list)"
				},
				{
				 "name": "CUSTOM_CONFIG",
				 "label": "CUSTOM_CONFIG",
				 "description": "Add custom config (ex: mybl.domain.tld:ip4set:blfile.txt)",
			         "default": "cbl.cdcd.it:ip4set:cbl.rbl asn.cdcd.it:generic:asndrop.strange-rbl auth.cdcd.it:ip4set:auth.rbl"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/rbldns"
				},
				{
				 "name": "PORT",
				 "label": "PORT",
				 "description": "Port to listen to",
			         "default": "5353"
				}
			]
		},
		{
			"type": 2,
			"name": "DCC",
			"title": "DCC",
			"description": "DCC",
			"note": "https://www.rhyolite.com/dcc/",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/nm-logo.png",
			"repository": {
				"url": "https://github.com/Neomediatech/dcc-docker",
				"stackfile": "docker-compose.yml"
			}
		},
		{
			"type": 2,
			"name": "echoip",
			"title": "echoip",
			"description": "Simple app to get your ip via curl (like icanhazip.com)",
			"note": "nothing to note ;-)",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/portainer-v2/echoip.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/echoip.yml"
			},
			"env": [{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/echoip"
				},
				{
				 "name": "FQDN_HOST",
				 "label": "FQDN_HOST",
				 "description": "FQDN where to host this service",
			         "default": "ip.cd..."
				},
				{
				 "name": "GEOIP_LICENSE_KEY",
				 "label": "GEOIP_LICENSE_KEY",
				 "description": "link to how to get license key",
			         "default": "...."
				}
			]
		},
		{
			"type": 2,
			"name": "catchall",
			"title": "Nginx container to catch all 'unused' web traffic",
			"description": "_",
			"note": "<h1>IMPORTANT:</h1>You must create the path where you host configurations, eg: <strong>mkdir -p /srv/data/docker/containers/traefik</strong> <br/>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/portainer-v2/nginx-catchall-traefik.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/nginx-catchall.yml"
			},
			"env": [{
				 "name": "FQDN_HOST",
				 "label": "FQDN_HOST",
				 "description": "Full hostname",
			         "default": "catchall.c.***"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/traefik"
				}
			]
		},
		{
			"type": 2,
			"name": "pma-ispc",
			"title": "phpMyAdmin per db ISPConfig",
			"description": "Container pma per db ispconfig",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/portainer-v2/pma-ispc.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/pma-4-swarm-traefik.yml"
			},
			"env": [{
				 "name": "DB_HOST",
				 "label": "DB_HOST",
				 "description": "Mysql/MariaDB server",
			         "default": "10.2.0.1"
				},
				{
				 "name": "FQDN_HOST",
				 "label": "FQDN_HOST",
				 "description": "hostname da utilizzare per raggiungere il servizio",
			         "default": "pma-ispc.c..."
				},
				{
				 "name": "UPLOAD_LIMIT",
				 "label": "UPLOAD_LIMIT",
				 "description": "limite di upload del file sql",
			         "default": "20M"
				}
			]
		},
		{
			"type": 2,
			"name": "pyzor",
			"title": "Pyzor server by neomediatech",
			"description": "Stack composto da un'istanza Pyzor e Redis",
			"note": "<h1>IMPORTANT:</h1>You must create the path where you host configurations, eg: <strong>mkdir -p /srv/data/docker/containers/pyzor-server</strong> <br/>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/nm-logo.png",
			"repository": {
				"url": "https://github.com/Neomediatech/pyzor-server",
				"stackfile": "docker-compose.yml"
			},
			"env": [{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/pyzor-server"
				}
			]
		},
		{
			"type": 2,
			"name": "failover",
			"title": "Failover Stack",
			"description": "API (& more maybe) to manage failover to servers Database utilizzato dai vari server per recuperare i cron (e magari altro in futuro)",
			"note": "<h1>IMPORTANTE:</h1> Devi prima creare il percorso dove verranno ospitati i file, es: <strong>mkdir -p /srv/data/docker/containers/failover</strong> <br/>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/portainer-v2/failover.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/failover-stack-4-swarm.yml"
			},
			"env": [{
				 "name": "FQDN_PMA",
				 "label": "FQDN_PMA",
				 "description": "FQDN to access phpmyadmin interface (used by traefik to redirect traffic & for let'encrypt ssl certificate",
			         "default": "failover-pma.c.g.."
				},
				{
				 "name": "FQDN_NGINX",
				 "label": "FQDN_NGINX",
				 "description": "FQDN to access our api interface (used by traefik to redirect traffic & for let'encrypt ssl certificate",
			         "default": "failover-api.c.g.."
				},
				{
				 "name": "TRAEFIK_WHITELIST",
				 "label": "TRAEFIK_WHITELIST",
				 "description": "(optional) elenco di classi/ip autorizzate ad attraversare traefik, separati da virgola",
			         "default": "127.0.0.1"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/failover"
				}
			]
		},
		{
			"type": 2,
			"name": "sshd",
			"title": "SSHd by Neomediatech",
			"description": "SSHd container",
			"note": "<b>STACK_BASE_PATH=/srv/data/docker/containers/sshd ; mkdir -p ${STACK_BASE_PATH}/{conf,home,root,shadowdir,logs}</b>",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/sshd/master/openssh_logo.png",
			"image": "neomediatech/sshd:latest",
			"hostname": "sshd",
			"repository": {
				"url": "https://github.com/Neomediatech/sshd",
				"stackfile": "docker-compose.yml"
			},
			"env": [{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/sshd"
				}
			]
		},
		{
			"type": 1,
			"name": "fail2ban",
			"title": "Fail2Ban by Neomediatech",
			"description": "Dockerized Fail2Ban",
			"note": "<h2>ENV parameters below can be omitted if you put them in /data/config.ini</h2><h1>crea le varie directory: </h1>BASE_DIR='/srv/data/docker/containers/fail2ban' <br>mkdir -p $BASE_DIR/{action.d,db,filter.d,jail.d,log} && chmod 777 $BASE_DIR/{action.d,db,filter.d,jail.d,log}",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/fail2ban/master/fail2ban_logo.png",
			"image": "neomediatech/fail2ban:from-source",
			"hostname": "fail2ban",
			"network": "host",
			"volumes": [
			  {
			    "container": "/data",
			    "bind": "/srv/data/docker/containers/fail2ban/confs"
			  },
			  {
			    "container": "/var/log",
			    "bind": "/srv/data/docker/containers/fail2ban/logs"
			  },
			  {
			    "container": "/var/log/dnsbl-ipset",
			    "bind": "/var/log/dnsbl-ipset",
			    "readonly": true
			  },
			  {
			    "container": "/var/log/nginx-catchall",
			    "bind": "/srv/data/docker/containers/traefik/logs",
			    "readonly": true
			  },
			  {
			    "container": "/var/log/sshd",
			    "bind": "/srv/data/docker/containers/sshd/logs",
			    "readonly": true
			  }
			],
			"restart_policy": "always",
			"privileged": true,
			"env": [{
				 "name": "F2B_DEST_EMAIL",
				 "label": "F2B_DEST_EMAIL",
				 "description": "_",
			         "default": "supp..@ne.."
				},
				{
				 "name": "F2B_SENDER",
				 "label": "F2B_SENDER",
				 "description": "_",
			         "default": "hostname@ne.."
				},
				{
				 "name": "SSMTP_HOST",
				 "label": "SSMTP_HOST",
				 "description": "SMTP to use to send notifications",
				 "default": "10.40.50.5"
				},
				{
				 "name": "SSMTP_HOSTNAME",
				 "label": "SSMTP_HOSTNAME",
				 "description": "_",
			         "default": "hostname.ne.."
				}
			]
		},
		{
			"type": 1,
			"name": "redis-service",
			"title": "Redis",
			"description": "Redis di servizio senza scrittura dati su disco",
			"note": "_",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/portainer-v2/redis-logo.png",
			"image": "redis:alpine",
			"hostname": "redis-service",
			"network": "bridge",
			"ports": ["6400:6379/tcp"],
			"volumes": [
			  {
			    "container": "/data",
			    "bind": "/srv/data/docker/containers/redis-service/data"
			  }
			],
			"restart_policy": "always"
		},
		{
			"type": 1,
			"name": "sshd",
			"title": "SSHd by Neomediatech",
			"description": "SSHd container",
			"note": "_",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/sshd/master/openssh_logo.png",
			"image": "neomediatech/sshd:latest",
			"hostname": "sshd",
			"network": "bridge",
			"ports": ["22222:22/tcp"],
			"volumes": [
			  {
			    "container": "/etc/ssh",
			    "bind": "/srv/data/docker/containers/sshd/conf"
			  },
			  {
			    "container": "/home",
			    "bind": "/srv/data/docker/containers/sshd/home"
			  },
			  {
			    "container": "/root",
			    "bind": "/srv/data/docker/containers/sshd/root"
			  },
			  {
			    "container": "/data",
			    "bind": "/srv/data/docker/containers/sshd/shadowdir"
			  },
			  {
			    "container": "/var/log",
			    "bind": "/srv/data/docker/containers/sshd/logs"
			  }
			],
			"restart_policy": "always"
		},
		{
			"type": 1,
			"name": "logspout",
			"title": "Logspout from gliderlabs",
			"description": "Log router for Docker containers that runs inside Docker",
			"note": "!!WARNING!! WORK IN PROGRESS! USE AT YOU OWN RISK!",
			"categories": [
				"Other"
			],
			"platform": "linux",
			"logo": "https://github.com/Neomediatech/docker-stack-templates/raw/master/nm-logo.png",
			"image": "gliderlabs/logspout:latest",
			"command": "syslog://10.205.33.1:514",
			"hostname": "logspout",
			"network": "bridge",
			"ports": ["48181:80/tcp"],
			"volumes": [
			  {
			    "container": "/var/run/docker.sock",
			    "bind": "/var/run/docker.sock"
			  },
			  {
			    "container": "/etc/localtime",
			    "bind": "/etc/localtime",
			    "readonly": true
			  }
			],
			"restart_policy": "always"
		},
		{
			"type": 2,
			"name": "honeypot",
			"title": "HoneyPot All-In-One",
			"description": "Container standalone per collezionare tentativi di intrusione/spam",
			"note": "<h1>Attenzione!</h1>Assicurati di aver creato tutti i vari path",
			"categories": [
				"HoneyPot"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/honeypot.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/honey-allinone-stack-4-compose.yml"
			},
			"env": [{
				 "name": "OPENCANARY_NODE_ID",
				 "label": "Opencanary Node ID",
				 "description": " ",
			         "default": "honey-customise"
				},
				{
				 "name": "CLAMAV_ENABLED",
				 "label": "Enable ClamAV Antivirus?",
				 "description": "Enable ClamAV Antivirus? [yes (Default), no]",
			         "default": "yes"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/honeypot"
				},
				{
				 "name": "LOGS_PATH",
				 "label": "LOGS_PATH",
				 "description": "Path for logfiles. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/fail2ban/logs/honeypot"
				},
				{
				 "name": "MAILSERVER_CERT",
				 "label": "MAILSERVER_CERT",
				 "description": "FQDN server name for the SSL/TLS certificate, will not be automatically generated",
			         "default": "noservername.domain.tld"
				}
			]
		},
		{
			"type": 3,
			"name": "honeypot",
			"title": "HoneyPot All-In-One",
			"description": "Compose stack per collezionare tentativi di intrusione/spam",
			"note": "<h1>Attenzione!</h1>Assicurati di aver creato tutti i vari path",
			"categories": [
				"HoneyPot"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/honeypot.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/honey-allinone-stack-4-compose.yml"
			},
			"env": [{
				 "name": "OPENCANARY_NODE_ID",
				 "label": "Opencanary Node ID",
				 "description": " ",
			         "default": "honey-customise"
				},
				{
				 "name": "CLAMAV_ENABLED",
				 "label": "Enable ClamAV Antivirus?",
				 "description": "Enable ClamAV Antivirus? [yes (Default), no]",
			         "default": "yes"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/honeypot"
				},
				{
				 "name": "LOGS_PATH",
				 "label": "LOGS_PATH",
				 "description": "Path for logfiles. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/fail2ban/logs/honeypot"
				},
				{
				 "name": "MAILSERVER_CERT",
				 "label": "MAILSERVER_CERT",
				 "description": "FQDN server name for the SSL/TLS certificate, will not be automatically generated",
			         "default": "noservername.domain.tld"
				}
			]
		},
		{
			"type": 2,
			"name": "HoneyPot",
			"title": "HoneyPot",
			"description": "Stack di container per collezionare tentativi di intrusione/spam",
			"note": "<h1>Attenzione!</h1>Assicurati di aver creato tutti i vari path",
			"categories": [
				"HoneyPot"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/honeypot.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/honey-stack-4-compose-v3.yml"
			},
			"env": [{
				 "name": "OPENCANARY_NODE_ID",
				 "label": "Opencanary Node ID",
				 "description": " ",
			         "default": "honey-customise"
				},
				{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/honeypot"
				},
				{
				 "name": "LOGS_PATH",
				 "label": "LOGS_PATH",
				 "description": "Path for logfiles. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/fail2ban/logs/honeypot"
				}
			]
		},
		{
			"type": 2,
			"name": "nextcloud",
			"title": "Nextcloud app",
			"description": "Nextcloud, OnlyOffice, Nginx, MariaDB, FPM, Redis, cron",
			"note": "<h1>WARNING!!!</h1>Before starting this stack you need to create this files in /var/lib/mysql container directory:<br> - 'db-name.txt' (write in this file the name of the Nextcloud database)<br> - 'db-nextcloud.pwd' (password for the Nextcloud database user)<br> - 'db-root.pwd' (password for the MariaDB root user)<br> - 'db-user.txt' (name for the Nextcloud database user)<br><h2>Otherwise this stack will not works</h2>",
			"categories": ["web", "storage"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/nextcloud-logo-nm.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/nextcloud-stack-4-swarm-nm.yml"
			},
			"env": [{
				 "name": "STACK_BASE_PATH",
				 "label": "STACK_BASE_PATH",
				 "description": "Path for the stack. Must exists before launching this stack!",
			         "default": "/srv/data/docker/containers/nextcloud-app"
				},
				{
				 "name": "NC_SHARE1",
				 "label": "NC_SHARE1",
				 "description": "_",
			         "default": "share1"
				},
				{
				 "name": "NC_SHARE2",
				 "label": "NC_SHARE2",
				 "description": "_",
			         "default": "share2"
				},
				{
				 "name": "NC_SHARE3",
				 "label": "NC_SHARE3",
				 "description": "_",
			         "default": "share3"
				}
			]
		},
		{
			"type": 2,
			"name": "test",
			"title": "Test stack",
			"description": "A stack to do various tests",
			"note": "<h1>This stack does nothing</h1>It launches a bash shell that echoes the current date and exported vars every five seconds",
			"categories": ["tests"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/Neomediatech/docker-stack-templates/master/portainer-v2/man-at-intellectual-work.png",
			"repository": {
				"url": "https://github.com/Neomediatech/docker-stack-templates",
				"stackfile": "portainer-v2/test.yml"
			},
			"env": [{
				 "name": "TEST_VAR1",
				 "label": "TEST_VAR1",
				 "description": "Write some text or nothing",
			         "default": ""
				},
				{
				 "name": "TEST_VAR2",
				 "label": "TEST_VAR2",
				 "description": "Write some text or nothing",
			         "default": ""
				},
				{
				 "name": "TEST_VAR3",
				 "label": "TEST_VAR3",
				 "description": "Write some text or nothing",
			         "default": ""
				}
			]
		}
  ]
} 
